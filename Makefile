# =============================================================================
# ViaText Core – Makefile quick guide
#
# Common targets
#   make / make all     Build the static library only: libviatext-core.a
#   make test           Build and run unit tests (doctest-based)
#   make clean          Remove build artifacts
#
# Useful variables
#   SAN=1               Enable AddressSanitizer + UndefinedBehaviorSanitizer
#                       (adds -fsanitize=address,undefined -fno-omit-frame-pointer)
#                       Example:  make SAN=1 test
#
#   RUN='...'           Extra args passed to the doctest runner.
#                       Examples:
#                         make test RUN='-s'                 # show successful tests
#                         make test RUN='-tc="Ping*"'        # run matching test cases
#
# Toolchain requirements
#   - GNU Make
#   - C++17 compiler (g++ or clang++)
#   - ar (for the static library)
#
# Test framework (header-only doctest)
#   Tests require the doctest header to be available on the include path.
#   Recommended (system packages):
#     Fedora/RHEL:   sudo dnf install doctest-devel
#     Ubuntu/Debian: sudo apt-get install doctest-dev
#     Arch:          sudo pacman -S doctest
#   Or vendor locally (keeps tests optional for users who don’t install it):
#     mkdir -p third_party/doctest && \
#     curl -L https://raw.githubusercontent.com/doctest/doctest/master/doctest/doctest.h \
#          -o third_party/doctest/doctest.h
#
# Sanitizers (optional but recommended while developing)
#   Link/Runtime libraries must be installed or linking will fail when SAN=1:
#     Fedora/RHEL:   sudo dnf install libasan libubsan
#     Ubuntu/Debian: sudo apt-get install libasan libubsan
#     Arch:          provided by gcc/clang packages
#   Capture sanitizer + test output:
#     make SAN=1 test |& tee test.txt
#     # or
#     make SAN=1 test > test.txt 2>&1
#
# Notes
#   - Library and tests are built separately: regular users can build the lib
#     without installing doctest; only `make test` needs it.
#   - Includes search both `include/` and `third_party/` by default.
# =============================================================================


# --- toolchain ---
CXX      := g++
AR       := ar
ARFLAGS  := rcs

# --- compile flags ---
CXXFLAGS := -std=c++17 -Wall -Wextra -Wpedantic -MMD -MP
CXXFLAGS += -Iinclude -Ithird_party   # ETL/CLI/doctest (vendored) headers

# --- check memory errors with sanitizers ---
SAN ?=
SAN_FLAGS :=
ifeq ($(SAN),1)
SAN_FLAGS := -fsanitize=address,undefined -fno-omit-frame-pointer
endif
CXXFLAGS += $(SAN_FLAGS)

# --- library ---
LIB      := libviatext-core.a
LIB_OBJS := src/core.o src/message_id.o
LIB_DEPS := $(LIB_OBJS:.o=.d)

# --- tests (optional) ---
TEST_SRCS     := $(wildcard tests/*.cpp)
TEST_BIN      := build/tests/viatext-tests
# tests shouldn't emit dep files when compiling .cpp straight to exe
TEST_CXXFLAGS := $(filter-out -MMD -MP,$(CXXFLAGS))
TEST_LDFLAGS  := $(SAN_FLAGS)

# Allow: make test RUN='-tc="Ping*" -s'
RUN ?=

.PHONY: all clean test help

# ========================
# Main build (no tests)
# ========================
all: $(LIB)

$(LIB): $(LIB_OBJS)
	$(AR) $(ARFLAGS) $@ $^

src/%.o: src/%.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# ========================
# Optional tests
# ========================
test: $(LIB)
	@mkdir -p build/tests
	$(CXX) $(TEST_CXXFLAGS) $(TEST_SRCS) $(LIB) -o $(TEST_BIN) $(TEST_LDFLAGS)
	./$(TEST_BIN) $(RUN)

# ========================
# Utilities
# ========================
clean:
	rm -f $(LIB) $(LIB_OBJS) $(LIB_DEPS)
	rm -rf build

help:
	@echo 'Targets:'
	@echo '  make            Build $(LIB) (no tests)'
	@echo '  make test       Build and run tests (requires doctest)'
	@echo '                  Example: make test RUN="-tc=\"Ping*\" -s"'
	@echo '  make clean      Remove build artifacts'

# Auto-include header dependencies (generated by -MMD -MP)
-include $(LIB_DEPS)
